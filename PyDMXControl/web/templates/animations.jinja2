{#
 *  PyDMXControl: A Python 3 module to control DMX using OpenDMX or uDMX.
 *                Featuring fixture profiles, built-in effects and a web control panel.
 *  <https://github.com/MattIPv4/PyDMXControl/>
 *  Copyright (C) 2019 Matt Cowley (MattIPv4) (me@mattcowley.co.uk)
 #}
{% extends "base.jinja2" %}

{% block body %}
    <h2>Home</h2>

    <section>
        <article>
            <h2>Sync utilities</h2>
            <table>
                <thead>
                <tr>
                    <th>Callback Name</th>
                    <th>Run</th>
                </tr>
                </thead>
                <tbody>
                    <tr>
                        <td data-th="Callback Name">
                            BPM</td>
                        <td data-th="Run">
                            <form id="bpm">
                                <input id="bpm_value" name="bpm_value" type="number" min="0" max="1000" step="1" value="{{ controller.ticker.get_bpm() }}" required/>
                                <input type="submit" value="Update" id="submit" name="submit"/>
                            </form>
                        </td>
                    <tr>
                    <tr>
                        <td data-th="Callback Name">
                            Sync</td>
                        <td data-th="Run">
                            <form id="sync">
                                <input type="submit" value="Update" id="submit" name="submit"/>
                            </form>
                        </td>
                    <tr>
                    <tr>
                        <td data-th="Callback Name">
                            Nudge (ms)</td>
                        <td data-th="Run">
                            <form id="nudge">
                                <input id="nudge_value" name="nudge_value" type="number" min="-1000" max="1000" step="1" value="50" required/>
                                <input type="submit" value="Update" id="submit" name="submit"/>
                            </form>
                        </td>
                    <tr>
                </tbody>
            </table>
        </article>

        <article>
            <h2>Animations</h2>
            <table>
                <thead>
                <tr>
                    <th>Callback Name</th>
                    <th>Run</th>
                </tr>
                </thead>
                <tbody>
                    <tr>
                        <th>Callback Name</th>
                        <th>Run</th>
                    </tr>
                    {% for name in animations.keys() %}
                        <tr>
                            <td data-th="Animation Name">
                                {{ name }}</td>
                            <td data-th="Run">
                                <a href="{{ url_for('.callback', cb=name) }}" data-no-reload class="button">Run</a></td>
                        </tr>
                    {% endfor %}
                </tbody>
            <table>
        </article>
    </section>
{% endblock body %}

{% block script %}
    <script>
        function change_input(value, update) {
            document.getElementById("intensity_value").value = value;
            input_change(update);
        }

        function input_change(update) {
            document.querySelector("label[for='intensity_value']").innerText = "Last Value: " + String(document.getElementById("intensity_value").value);
            if (update) get("{{ url_for('.global_intensity', val=0) }}" + encodeURIComponent(document.getElementById("intensity_value").value));
        }

        document.getElementById("bpm").addEventListener("submit", function (e) {
            e.preventDefault();
            get("http://localhost:8080/set_bpm/" + encodeURIComponent(Math.floor(document.getElementById("bpm_value").value)) + "/0");
        });

        document.getElementById("sync").addEventListener("submit", function (e) {
            e.preventDefault();
            get("http://localhost:8080/sync/" + encodeURIComponent(Date.now()));
        });

        document.getElementById("nudge").addEventListener("submit", function (e) {
            e.preventDefault();
            get("http://localhost:8080/nudge/" + encodeURIComponent(document.getElementById("nudge_value").value));
        });
    </script>
{% endblock script %}