{#
 *  PyDMXControl: A Python 3 module to control DMX using OpenDMX or uDMX.
 *                Featuring fixture profiles, built-in effects and a web control panel.
 *  <https://github.com/MattIPv4/PyDMXControl/>
 *  Copyright (C) 2019 Matt Cowley (MattIPv4) (me@mattcowley.co.uk)
 #}
{% extends "base.jinja2" %}

{% block body %}
    <h2>Home</h2>

    <section>

        <article>
            <h2>Fixtures</h2>
            <table>
                <thead>
                <tr>
                    <th>Fixture ID</th>
                    <th>Fixture Name</th>
                    <th>Fixture Channels</th>
                    <th>Quick Control</th>
                    <th>Full Control</th>
                </tr>
                </thead>
                <tbody>
                {% for fixture in controller.get_all_fixtures() %}
                    <tr>
                        <td data-th="Fixture ID">
                            #{{ fixture.id }}</td>
                        <td data-th="Fixture Name">
                            {{ fixture.name if fixture.name else "<i>None</i>" }}</td>
                        <td data-th="Fixture Channels">
                            {{ fixture.channel_usage }}</td>
                        <td data-th="Quick Control">
                            {% for helper in helpers %}
                                <a href="{{ url_for('.helper', fid=fixture.id, val=helper) }}" data-no-reload
                                   class="button">{{ helper }}</a>
                            {% endfor %}</td>
                        <td data-th="Full Control">
                            <a href="{{ url_for('.fixture', fid=fixture.id) }}" class="button">Control</a></td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </article>

        <article>
            <h2>Fixture Types</h2>
            <table>
                <thead>
                <tr>
                    <th>Fixture Type</th>
                    <th>Num Fixtures</th>
                </tr>
                </thead>
                <tbody>
                {% for fixture in fixture_types.keys() %}
                    <tr>
                        <td data-th="Fixture Type">
                            {{ fixture.__name__ }}</td>
                        <td data-th="Num Fixtures">
                            {{ fixture_types[fixture] }}</td>
                        <td data-th="Full Control">
                            <a href="{{ url_for('.fixture_type', f_type=fixture.__name__) }}" class="button">Control</a></td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </article>

        <article>
            <h2>Callbacks</h2>
            <table>
                <thead>
                <tr>
                    <th>Callback Name</th>
                    <th>Run</th>
                </tr>
                </thead>
                <tbody>
                {% for name in callbacks.keys() %}
                    <tr>
                        <td data-th="Callback Name">
                            {{ name }}</td>
                        <td data-th="Run">
                            <a href="{{ url_for('.callback', cb=name) }}" data-no-reload class="button">Run</a></td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </article>

        <article>
            <h2>Timed Events</h2>
            <table>
                <thead>
                <tr>
                    <th>Timed Events Name</th>
                    <th>View</th>
                    <th>Actions</th>
                    <th>State</th>
                </tr>
                </thead>
                <tbody>
                {% for name, event in timed_events.items() %}
                    <tr>
                        <td data-th="Timed Events Name">
                            {{ name }}</td>
                        <td data-th="View">
                            <a href="{{ url_for('.timed_event', te=name) }}" class="button">View</a>
                        </td>
                        <td data-th="Actions">
                            <a href="{{ url_for('.run_timed_event', te=name) }}" data-no-reload class="button">Run</a>
                            <a href="{{ url_for('.stop_timed_event', te=name) }}" data-no-reload class="button">Stop</a>
                        </td>
                        <td data-th="State">
                            <span id="{{ name }}-state" class="button">
                                {{ "Running" if event.running else "Stopped" }}
                            </span>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </article>

        <article>
            <h2>Global Intensity</h2>
            <i>Will update all fixture dimmers on change.</i>
            <form id="intensity">
                <div class="button-group">
                    <a href="javascript:change_input(0, true)" class="button">0%</a>
                    <a href="javascript:change_input(128, true)" class="button">50%</a>
                    <a href="javascript:change_input(255, true)" class="button">100%</a>
                </div>
                <div class="slider">
                    <input title="Global Intensity" type="range" min="0" max="255" step="1" id="intensity_value"/>
                </div>
                <label for="intensity_value"></label>
            </form>
        </article>

    </section>
{% endblock body %}

{% block script %}
    <script>
        function change_input(value, update) {
            document.getElementById("intensity_value").value = value;
            input_change(update);
        }

        function input_change(update) {
            document.querySelector("label[for='intensity_value']").innerText = "Last Value: " + String(document.getElementById("intensity_value").value);
            if (update) get("{{ url_for('.global_intensity', val=0) }}" + encodeURIComponent(document.getElementById("intensity_value").value));
        }

        document.getElementById("intensity_value").addEventListener("input", function (e) {
            input_change(true);
        });
    </script>
{% endblock script %}